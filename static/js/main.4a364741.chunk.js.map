{"version":3,"sources":["components/TextBlock.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["TextBlock","className","Card","name","email","id","alt","src","CardList","robots","map","user","index","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAWeA,EATG,WACjB,OACC,sBAAKC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,mBACA,+F,oCCQYC,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKJ,UAAU,sDAAf,UACC,qBAAKK,IAAI,SAASC,IAAG,+BAA0BF,EAA1B,kBACrB,gCACC,6BAAKF,IACL,4BAAIC,WCiBOI,EAtBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAInB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OACC,cAAC,EAAD,CAECP,GAAII,EAAOG,GAAOP,GAClBF,KAAMM,EAAOG,GAAOT,KACpBC,MAAOK,EAAOG,GAAOR,OAHhBQ,SCGGC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKd,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVe,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCECI,EATA,SAACC,GAEf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,YCkBKC,E,kDAtBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAO,CACXC,UAAW,GAHM,E,gEASlBC,KAAKC,SAAS,CAAEF,UAAW,M,+BAI3B,OAAIC,KAAKF,MAAMC,SACP,4DAIDC,KAAKT,MAAMK,a,GAnBQM,aCgDbC,G,wDAxCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GAEjB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKV,MAAQ,CACZlB,OAAQ,GACR0B,YAAa,IAJD,E,gEAQO,IAAD,OACnBG,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAK,EAAKZ,SAAS,CAAErB,OAAQiC,S,+BAQ/B,IAAD,EACuBb,KAAKF,MAA7BlB,EADC,EACDA,OAAQ0B,EADP,EACOA,YACVQ,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASZ,EAAYW,kBAEtD,OAAyB,IAAlBrC,EAAOuC,OACb,4CAEC,sBAAK/C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWc,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACG,cAAC,EAAD,CAAUxB,OAAQkC,e,GAjCRZ,cCGHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACC,cAAC,EAAD,IACA,cAAC,EAAD,OAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4a364741.chunk.js","sourcesContent":["import React from 'react';\n\nconst TextBlock = () => {\n\treturn (\n\t\t<div className=\"tc\">\n\t\t\t<h1 className='f2'>About</h1>\n\t\t\t<p>This is an about text, please fill in real text if needed!</p>\n\t\t</div>\n\t\t);\n}\n\nexport default TextBlock;","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}test?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\nconst CardList = ({ robots }) => {\n\t// if (true) {\n\t// \tthrow new Error('NOOOOOO');\n\t// }\n\treturn (\n \t\t<div>\n    \t\t{\n    \t\t\trobots.map((user, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\tid={robots[index].id} \n\t\t\t\t\t\t\tname={robots[index].name} \n\t\t\t\t\t\t\temail={robots[index].email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}) \n\t\t\t}\n  \t\t</div>\n  \t);\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({ searchField, searchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots' \n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\n\nconst Scroll = (props) => {\n\t/* children prop holds the child components this component wraps */\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t\t);\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\thasError : false\n\t\t}\n\t}\n\n\t/* like a catch-block, if an error occurs, this runs */\n\tcomponentDidCatch() {\n\t\tthis.setState({ hasError : true });\n\t}\n\n\trender () {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Oooooops. That is not good</h1>;\n\t\t}\n\n\t\t/* returns the children of this component which i CardList, this is shown in App.js, as this component wraps CardList */\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\n/* after app is done -> npm run build makes a build folder with optimised code tht can be deployed */\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users =>  this.setState({ robots: users }))\n\t}\n\n\tonSearchChange = (event) => {\n\t\t/* updates a current state in this component */\n\t\tthis.setState({ searchfield: event.target.value });\n\t}\n\n\trender () {\n\t\tconst { robots, searchfield } = this.state;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t});\n\t\treturn robots.length === 0 ?\n\t\t\t<h1>Loading...</h1> : \n\t\t\t(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundary>\n  \t\t\t\t\t\t<CardList robots={filteredRobots}/>\n  \t\t\t\t\t</ErrorBoundary>\n  \t\t\t\t\t</Scroll>\n  \t\t\t\t</div>\n  \t\t\t);\n  \t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TextBlock from './components/TextBlock';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  \t<TextBlock />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}